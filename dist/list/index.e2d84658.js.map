{"mappings":"ACAA,CACE,MAAM,UAAsB,YAC1B,aAAc,CACZ,KAAK,GAEL,IAAI,CAAC,YAAY,CAAC,CAAE,KAAM,MAAO,EACnC,CAEA,6BAA8B,CAC5B,IAAM,EAAgB,IAAI,CAAC,YAAY,CAAC,kBAAoB,MACtD,EAAa,IAAI,CAAC,YAAY,CAAC,eAAiB,UAChD,EACJ,IAAI,CAAC,YAAY,CAAC,mBAAqB,aACnC,EAAY,IAAI,CAAC,YAAY,CAAC,cAAgB,OAC9C,EAAa,IAAI,CAAC,YAAY,CAAC,eAAiB,OAChD,EAAM,IAAI,CAAC,YAAY,CAAC,QAAU,GAExC,CAAA,IAAI,CAAC,UAAU,CAAC,SAAS,CAAG,CAAC;;;;;;;;;;;4BAWP,EAAE,EAAc;yBACnB,EAAE,EAAW;6BACT,EAAE,EAAe;iBAC7B,EAAE,EAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA0CjB,CAAC,CAED,IAAM,EAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAE3C,EAAK,gBAAgB,CAAC,aAAc,KAClC,IAAM,EAAgB,EAAK,aAAa,GACxC,EAAc,OAAO,CAAC,AAAC,IACrB,GACE,EAAK,SAAS,EACd,EAAK,SAAS,CAAC,QAAQ,CAAC,wBACxB,CACI,GAAa,IACf,EAAK,KAAK,CAAC,KAAK,CAAG,EACnB,EAAK,KAAK,CAAC,MAAM,CAAG,GAGtB,IAAM,EAAa,EAAK,aAAa,CAAC,OAElC,IACF,EAAW,KAAK,CAAC,SAAS,CAAG,UAC7B,EAAW,KAAK,CAAC,QAAQ,CAAG,OAC5B,EAAW,KAAK,CAAC,SAAS,CAAG,OAC7B,EAAW,KAAK,CAAC,aAAa,CAAG,SAErC,CACF,EACF,EACF,CAEA,mBAAoB,CAClB,IAAI,CAAC,2BAA2B,EAClC,CACF,CAEA,eAAe,MAAM,CAAC,kBAAmB,EAEzC;;;;;;;;;;;;;;EAcA,EACF,C,0C","sources":["<anon>","src/list/index.js"],"sourcesContent":["{\n    class SqsCustomList extends HTMLElement {\n        constructor(){\n            super();\n            this.attachShadow({\n                mode: \"open\"\n            });\n        }\n        getPropsValuesAndRenderList() {\n            const flexDirection = this.getAttribute(\"flexDirection\") || \"row\";\n            const alignItems = this.getAttribute(\"alignItems\") || \"stretch\";\n            const justifyContent = this.getAttribute(\"justifyContent\") || \"flex-start\";\n            const itemWidth = this.getAttribute(\"itemWidth\") || \"auto\";\n            const itemHeight = this.getAttribute(\"itemHeight\") || \"auto\";\n            const gap = this.getAttribute(\"gap\") || \"0\";\n            this.shadowRoot.innerHTML = `\n        <style>\n          * {\n            box-sizing: border-box;\n          }\n  \n          .sqs-custom-list-container {\n            display: flex;\n            margin: 0;\n            padding: 0;\n            list-style-type: none;\n            flex-direction: ${flexDirection};\n            align-items: ${alignItems};\n            justify-content: ${justifyContent};\n            gap: ${gap};\n            flex-wrap: nowrap;\n            height: 100%;\n            width: 100%;\n          }\n\n          @media screen and max-width(600px) {\n            .sqs-custom-list-container {\n              flex-direction: column;\n              align-items: flex-start;\n              justify-content: center;\n              gap: initial;\n              flex-wrap: wrap;\n            }\n          }\n  \n          .sqs-custom-list-item {\n            display: flex;\n            flex: 1;\n            text-align: center;\n          }\n\n          .sqs-custom-list-item a {\n            display: inline-block; \n            width: 100%; \n            height: 100%;\n            box-sizing: border-box;\n            display: block;\n            position: relative;\n          }\n\n          .sqs-custom-list-item img {\n            max-width: 100%; \n            max-height: 100%; \n            object-fit: contain; \n            vertical-align: middle;\n          }\n        </style>\n  \n        <div class=\"sqs-custom-list-container\">\n          <slot></slot>\n        </div>\n      `;\n            const slot = this.shadowRoot.querySelector(\"slot\");\n            slot.addEventListener(\"slotchange\", ()=>{\n                const assignedNodes = slot.assignedNodes();\n                assignedNodes.forEach((node)=>{\n                    if (node.classList && node.classList.contains(\"sqs-custom-list-item\")) {\n                        if (itemWidth && itemHeight) {\n                            node.style.width = itemWidth;\n                            node.style.height = itemHeight;\n                        }\n                        const imgElement = node.querySelector(\"img\");\n                        if (imgElement) {\n                            imgElement.style.objectFit = \"contain\";\n                            imgElement.style.maxWidth = \"100%\";\n                            imgElement.style.maxHeight = \"100%\";\n                            imgElement.style.verticalAlign = \"middle\";\n                        }\n                    }\n                });\n            });\n        }\n        connectedCallback() {\n            this.getPropsValuesAndRenderList();\n        }\n    }\n    customElements.define(\"sqs-custom-list\", SqsCustomList);\n/*\n  How to use it:\n  \n  <sqs-custom-list \n    flexDirection=\"column\" \n    alignItems=\"center\" \n    justifyContent=\"space-around\" \n    itemWidth=\"100px\" \n    itemHeight=\"50px\" \n    gap=\"10px\">\n      <div class=\"sqs-custom-list-item\">Item 1</div>\n      <div class=\"sqs-custom-list-item\">Item 2</div>\n      <div class=\"sqs-custom-list-item\">Item 3</div>\n  </sqs-custom-list>\n  */ }\n//# sourceMappingURL=index.e2d84658.js.map\n","{\n  class SqsCustomList extends HTMLElement {\n    constructor() {\n      super();\n\n      this.attachShadow({ mode: \"open\" });\n    }\n\n    getPropsValuesAndRenderList() {\n      const flexDirection = this.getAttribute(\"flexDirection\") || \"row\";\n      const alignItems = this.getAttribute(\"alignItems\") || \"stretch\";\n      const justifyContent =\n        this.getAttribute(\"justifyContent\") || \"flex-start\";\n      const itemWidth = this.getAttribute(\"itemWidth\") || \"auto\";\n      const itemHeight = this.getAttribute(\"itemHeight\") || \"auto\";\n      const gap = this.getAttribute(\"gap\") || \"0\";\n\n      this.shadowRoot.innerHTML = `\n        <style>\n          * {\n            box-sizing: border-box;\n          }\n  \n          .sqs-custom-list-container {\n            display: flex;\n            margin: 0;\n            padding: 0;\n            list-style-type: none;\n            flex-direction: ${flexDirection};\n            align-items: ${alignItems};\n            justify-content: ${justifyContent};\n            gap: ${gap};\n            flex-wrap: nowrap;\n            height: 100%;\n            width: 100%;\n          }\n\n          @media screen and max-width(600px) {\n            .sqs-custom-list-container {\n              flex-direction: column;\n              align-items: flex-start;\n              justify-content: center;\n              gap: initial;\n              flex-wrap: wrap;\n            }\n          }\n  \n          .sqs-custom-list-item {\n            display: flex;\n            flex: 1;\n            text-align: center;\n          }\n\n          .sqs-custom-list-item a {\n            display: inline-block; \n            width: 100%; \n            height: 100%;\n            box-sizing: border-box;\n            display: block;\n            position: relative;\n          }\n\n          .sqs-custom-list-item img {\n            max-width: 100%; \n            max-height: 100%; \n            object-fit: contain; \n            vertical-align: middle;\n          }\n        </style>\n  \n        <div class=\"sqs-custom-list-container\">\n          <slot></slot>\n        </div>\n      `;\n\n      const slot = this.shadowRoot.querySelector(\"slot\");\n\n      slot.addEventListener(\"slotchange\", () => {\n        const assignedNodes = slot.assignedNodes();\n        assignedNodes.forEach((node) => {\n          if (\n            node.classList &&\n            node.classList.contains(\"sqs-custom-list-item\")\n          ) {\n            if (itemWidth && itemHeight) {\n              node.style.width = itemWidth;\n              node.style.height = itemHeight;\n            }\n\n            const imgElement = node.querySelector(\"img\");\n\n            if (imgElement) {\n              imgElement.style.objectFit = \"contain\";\n              imgElement.style.maxWidth = \"100%\";\n              imgElement.style.maxHeight = \"100%\";\n              imgElement.style.verticalAlign = \"middle\";\n            }\n          }\n        });\n      });\n    }\n\n    connectedCallback() {\n      this.getPropsValuesAndRenderList();\n    }\n  }\n\n  customElements.define(\"sqs-custom-list\", SqsCustomList);\n\n  /*\n  How to use it:\n  \n  <sqs-custom-list \n    flexDirection=\"column\" \n    alignItems=\"center\" \n    justifyContent=\"space-around\" \n    itemWidth=\"100px\" \n    itemHeight=\"50px\" \n    gap=\"10px\">\n      <div class=\"sqs-custom-list-item\">Item 1</div>\n      <div class=\"sqs-custom-list-item\">Item 2</div>\n      <div class=\"sqs-custom-list-item\">Item 3</div>\n  </sqs-custom-list>\n  */\n}\n"],"names":["SqsCustomList","HTMLElement","constructor","attachShadow","mode","getPropsValuesAndRenderList","flexDirection","getAttribute","alignItems","justifyContent","itemWidth","itemHeight","gap","shadowRoot","innerHTML","slot","querySelector","addEventListener","assignedNodes","forEach","node","classList","contains","style","width","height","imgElement","objectFit","maxWidth","maxHeight","verticalAlign","connectedCallback","customElements","define"],"version":3,"file":"index.e2d84658.js.map"}