{"mappings":"ACAA,CACE,IAAM,EAAS,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAiEN,CAAC,CAEL,EAAY,CAAC;;;;;;;;UAQX,CAAC,AAET,OAAM,UAAuB,YAC3B,uBAAyB,2BAA4B,AACrD,CAAA,qBAAuB,mBAAoB,AAC3C,CAAA,qBAAuB,yBAA0B,AACjD,CAAA,uBAAyB,2BAA4B,AAErD,cAAc,CACZ,KAAK,GAEL,IAAI,CAAC,YAAY,CAAC,CAAE,KAAM,MAAO,GAEjC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAG,CAAC;IAC/B,EAAE,EAAO;IACT,EAAE,EAAU;IACZ,CAAC,AACD,CAEA,gBAAiB,CACf,IAAM,EAAa,IAAI,CAAC,YAAY,CAAC,cAC/B,EAAiB,IAAI,CAAC,YAAY,CAAC,kBACnC,EAAgB,IAAI,CAAC,YAAY,CAAC,iBAClC,EAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAoB,EAC/D,EAAe,IAAI,CAAC,UAAU,CAAC,aAAa,CAChD,IAAI,CAAC,sBAAsB,EAGzB,IACF,EAAa,KAAK,CAAC,UAAU,CAAG,EAChC,EAAM,KAAK,CAAC,UAAU,CAAG,GAGvB,IACF,EAAa,KAAK,CAAC,cAAc,CAAG,EACpC,EAAM,KAAK,CAAC,UAAU,CAAG,GAGvB,IACF,EAAa,KAAK,CAAC,aAAa,CAAG,EACnC,EAAM,KAAK,CAAC,aAAa,CAAG,EAEhC,CAEA,mBAAoB,CAClB,IAAI,CAAC,cAAc,GAEnB,IAAI,CAAC,UAAU,CACZ,aAAa,CAAC,IAAI,CAAC,oBAAoB,EACvC,gBAAgB,CAAC,QAAS,KACzB,IAAI,CAAC,KAAK,EACZ,GAEF,IAAI,CAAC,UAAU,CACZ,aAAa,CAAC,IAAI,CAAC,sBAAsB,EACzC,gBAAgB,CAAC,QAAS,AAAC,IACtB,EAAE,MAAM,GAAK,EAAE,aAAa,EAC9B,IAAI,CAAC,KAAK,EAEd,EACJ,CAEA,OAAQ,CACN,IAAM,EAAe,IAAI,CAAC,UAAU,CAAC,aAAa,CAChD,IAAI,CAAC,sBAAsB,EAEvB,EAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAoB,CACrE,CAAA,EAAa,KAAK,CAAC,OAAO,CAAG,OAC7B,EAAM,KAAK,CAAC,OAAO,CAAG,OACtB,EAAa,KAAK,CAAC,OAAO,CAAG,EAC7B,EAAM,KAAK,CAAC,OAAO,CAAG,CACxB,CAEA,MAAO,CACL,IAAM,EAAe,IAAI,CAAC,UAAU,CAAC,aAAa,CAChD,IAAI,CAAC,sBAAsB,EAEvB,EAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAoB,CACrE,CAAA,EAAa,KAAK,CAAC,OAAO,CAAG,OAC7B,EAAM,KAAK,CAAC,OAAO,CAAG,QAEjB,WAAW,KACd,EAAa,KAAK,CAAC,OAAO,CAAG,CAC/B,EAAG,KAEE,WAAW,KACd,EAAM,KAAK,CAAC,OAAO,CAAG,CACxB,EAAG,IACL,CACF,CAEA,eAAe,MAAM,CAAC,mBAAoB,EAE1C;;;;;;;;;;AAUF,EAEE;;;;;;;;;;;;;;;AAeF,EACA,C,0C","sources":["<anon>","src/modal/index.js"],"sourcesContent":["{\n    const styles = `\n    <style>\n    * {\n      box-sizing: border-box;\n    }\n\n    .sqs-custom-modal-overlay {\n      background-color: rgba(0, 0, 0, 0.5);\n      display: none;\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 9999;\n      align-items: center;\n      justify-content: center;\n      transition: opacity 0.3s ease;\n      opacity: 0;\n    }\n\n    .sqs-custom-modal {\n      z-index: 9999;\n      display: none;\n      z-index: 1;\n      width: 600px;\n      height: 400px;\n      overflow: auto;\n      background-color: #ffffff;\n      position: relative;\n      padding: 50px 70px;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    }\n\n    .sqs-custom-modal-content {\n      display: flex;\n      width: 100%;\n      height: 100%;\n    }\n\n    .sqs-custom-modal-close {\n      color: #ababab;\n      float: right;\n      font-weight: bold;\n      font-size: 22px;\n      line-height: 1em;\n      position: absolute;\n      top: 10px;\n      right: 14px;\n      transition: color 0.3s ease;\n    }\n\n    .sqs-custom-modal-close:hover {\n      color: #000000;\n      text-decoration: none;\n      cursor: pointer;\n    }\n\n    .sqs-custom-modal-close:hover,\n    .sqs-custom-modal-close:focus {\n      color: #000000;\n      text-decoration: none;\n      cursor: pointer;\n    }      \n    </style>`;\n    const component = `\n    <div class=\"sqs-custom-modal-overlay\">\n      <div class=\"sqs-custom-modal\">\n        <div class=\"sqs-custom-modal-content\">\n          <span class=\"sqs-custom-modal-close\">&times;</span>\n          <slot></slot>\n        </div>\n      </div>\n    </div>`;\n    class SqsCustomModal extends HTMLElement {\n        OVERLAY_CLASS_SELECTOR = \".sqs-custom-modal-overlay\";\n        MODAL_CLASS_SELECTOR = \".sqs-custom-modal\";\n        CLOSE_CLASS_SELECTOR = \".sqs-custom-modal-close\";\n        CONTENT_CLASS_SELECTOR = \".sqs-custom-modal-content\";\n        constructor(){\n            super();\n            this.attachShadow({\n                mode: \"open\"\n            });\n            this.shadowRoot.innerHTML = `\n    ${styles}\n    ${component}\n    `;\n        }\n        getPropsValues() {\n            const alignItems = this.getAttribute(\"alignItems\");\n            const justifyContent = this.getAttribute(\"justifyContent\");\n            const flexDirection = this.getAttribute(\"flexDirection\");\n            const modal = this.shadowRoot.querySelector(this.MODAL_CLASS_SELECTOR);\n            const modalContent = this.shadowRoot.querySelector(this.CONTENT_CLASS_SELECTOR);\n            if (alignItems) {\n                modalContent.style.alignItems = alignItems;\n                modal.style.alignItems = alignItems;\n            }\n            if (justifyContent) {\n                modalContent.style.justifyContent = justifyContent;\n                modal.style.alignItems = alignItems;\n            }\n            if (flexDirection) {\n                modalContent.style.flexDirection = flexDirection;\n                modal.style.flexDirection = flexDirection;\n            }\n        }\n        connectedCallback() {\n            this.getPropsValues();\n            this.shadowRoot.querySelector(this.CLOSE_CLASS_SELECTOR).addEventListener(\"click\", ()=>{\n                this.close();\n            });\n            this.shadowRoot.querySelector(this.OVERLAY_CLASS_SELECTOR).addEventListener(\"click\", (e)=>{\n                if (e.target === e.currentTarget) this.close();\n            });\n        }\n        close() {\n            const modalOverlay = this.shadowRoot.querySelector(this.OVERLAY_CLASS_SELECTOR);\n            const modal = this.shadowRoot.querySelector(this.MODAL_CLASS_SELECTOR);\n            modalOverlay.style.display = \"none\";\n            modal.style.display = \"none\";\n            modalOverlay.style.opacity = 0;\n            modal.style.opacity = 0;\n        }\n        open() {\n            const modalOverlay = this.shadowRoot.querySelector(this.OVERLAY_CLASS_SELECTOR);\n            const modal = this.shadowRoot.querySelector(this.MODAL_CLASS_SELECTOR);\n            modalOverlay.style.display = \"flex\";\n            modal.style.display = \"block\";\n            setTimeout(()=>{\n                modalOverlay.style.opacity = 1;\n            }, 200);\n            setTimeout(()=>{\n                modal.style.opacity = 1;\n            }, 500);\n        }\n    }\n    customElements.define(\"sqs-custom-modal\", SqsCustomModal);\n/*\nHow to use it:\n\n<sqs-custom-modal id=\"modal1\">\n  <p>Some text in the Modal..</p>\n</sqs-custom-modal>\n\n<button onclick=\"document.getElementById('modal1').open()\">\n  Open Modal\n</button>\n*/ /*\nHow to use props:\n\n<sqs-custom-modal \n  id=\"modal1\" \n  justifyContent=\"center\" \n  alignItems=\"center\" \n  direction=\"column\"\n>\n  <p>Some text in the Modal..</p>\n</sqs-custom-modal>\n\n<button onclick=\"document.getElementById('modal1').open()\">\n  Open Modal\n</button>\n*/ }\n//# sourceMappingURL=index.6a84e6b0.js.map\n","{\n  const styles = `\n    <style>\n    * {\n      box-sizing: border-box;\n    }\n\n    .sqs-custom-modal-overlay {\n      background-color: rgba(0, 0, 0, 0.5);\n      display: none;\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 9999;\n      align-items: center;\n      justify-content: center;\n      transition: opacity 0.3s ease;\n      opacity: 0;\n    }\n\n    .sqs-custom-modal {\n      z-index: 9999;\n      display: none;\n      z-index: 1;\n      width: 600px;\n      height: 400px;\n      overflow: auto;\n      background-color: #ffffff;\n      position: relative;\n      padding: 50px 70px;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    }\n\n    .sqs-custom-modal-content {\n      display: flex;\n      width: 100%;\n      height: 100%;\n    }\n\n    .sqs-custom-modal-close {\n      color: #ababab;\n      float: right;\n      font-weight: bold;\n      font-size: 22px;\n      line-height: 1em;\n      position: absolute;\n      top: 10px;\n      right: 14px;\n      transition: color 0.3s ease;\n    }\n\n    .sqs-custom-modal-close:hover {\n      color: #000000;\n      text-decoration: none;\n      cursor: pointer;\n    }\n\n    .sqs-custom-modal-close:hover,\n    .sqs-custom-modal-close:focus {\n      color: #000000;\n      text-decoration: none;\n      cursor: pointer;\n    }      \n    </style>`;\n\n  const component = `\n    <div class=\"sqs-custom-modal-overlay\">\n      <div class=\"sqs-custom-modal\">\n        <div class=\"sqs-custom-modal-content\">\n          <span class=\"sqs-custom-modal-close\">&times;</span>\n          <slot></slot>\n        </div>\n      </div>\n    </div>`;\n\n  class SqsCustomModal extends HTMLElement {\n    OVERLAY_CLASS_SELECTOR = \".sqs-custom-modal-overlay\";\n    MODAL_CLASS_SELECTOR = \".sqs-custom-modal\";\n    CLOSE_CLASS_SELECTOR = \".sqs-custom-modal-close\";\n    CONTENT_CLASS_SELECTOR = \".sqs-custom-modal-content\";\n\n    constructor() {\n      super();\n\n      this.attachShadow({ mode: \"open\" });\n\n      this.shadowRoot.innerHTML = `\n    ${styles}\n    ${component}\n    `;\n    }\n\n    getPropsValues() {\n      const alignItems = this.getAttribute(\"alignItems\");\n      const justifyContent = this.getAttribute(\"justifyContent\");\n      const flexDirection = this.getAttribute(\"flexDirection\");\n      const modal = this.shadowRoot.querySelector(this.MODAL_CLASS_SELECTOR);\n      const modalContent = this.shadowRoot.querySelector(\n        this.CONTENT_CLASS_SELECTOR\n      );\n\n      if (alignItems) {\n        modalContent.style.alignItems = alignItems;\n        modal.style.alignItems = alignItems;\n      }\n\n      if (justifyContent) {\n        modalContent.style.justifyContent = justifyContent;\n        modal.style.alignItems = alignItems;\n      }\n\n      if (flexDirection) {\n        modalContent.style.flexDirection = flexDirection;\n        modal.style.flexDirection = flexDirection;\n      }\n    }\n\n    connectedCallback() {\n      this.getPropsValues();\n\n      this.shadowRoot\n        .querySelector(this.CLOSE_CLASS_SELECTOR)\n        .addEventListener(\"click\", () => {\n          this.close();\n        });\n\n      this.shadowRoot\n        .querySelector(this.OVERLAY_CLASS_SELECTOR)\n        .addEventListener(\"click\", (e) => {\n          if (e.target === e.currentTarget) {\n            this.close();\n          }\n        });\n    }\n\n    close() {\n      const modalOverlay = this.shadowRoot.querySelector(\n        this.OVERLAY_CLASS_SELECTOR\n      );\n      const modal = this.shadowRoot.querySelector(this.MODAL_CLASS_SELECTOR);\n      modalOverlay.style.display = \"none\";\n      modal.style.display = \"none\";\n      modalOverlay.style.opacity = 0;\n      modal.style.opacity = 0;\n    }\n\n    open() {\n      const modalOverlay = this.shadowRoot.querySelector(\n        this.OVERLAY_CLASS_SELECTOR\n      );\n      const modal = this.shadowRoot.querySelector(this.MODAL_CLASS_SELECTOR);\n      modalOverlay.style.display = \"flex\";\n      modal.style.display = \"block\";\n\n      void setTimeout(() => {\n        modalOverlay.style.opacity = 1;\n      }, 200);\n\n      void setTimeout(() => {\n        modal.style.opacity = 1;\n      }, 500);\n    }\n  }\n\n  customElements.define(\"sqs-custom-modal\", SqsCustomModal);\n\n  /*\nHow to use it:\n\n<sqs-custom-modal id=\"modal1\">\n  <p>Some text in the Modal..</p>\n</sqs-custom-modal>\n\n<button onclick=\"document.getElementById('modal1').open()\">\n  Open Modal\n</button>\n*/\n\n  /*\nHow to use props:\n\n<sqs-custom-modal \n  id=\"modal1\" \n  justifyContent=\"center\" \n  alignItems=\"center\" \n  direction=\"column\"\n>\n  <p>Some text in the Modal..</p>\n</sqs-custom-modal>\n\n<button onclick=\"document.getElementById('modal1').open()\">\n  Open Modal\n</button>\n*/\n}\n"],"names":["styles","component","SqsCustomModal","HTMLElement","OVERLAY_CLASS_SELECTOR","MODAL_CLASS_SELECTOR","CLOSE_CLASS_SELECTOR","CONTENT_CLASS_SELECTOR","constructor","attachShadow","mode","shadowRoot","innerHTML","getPropsValues","alignItems","getAttribute","justifyContent","flexDirection","modal","querySelector","modalContent","style","connectedCallback","addEventListener","close","e","target","currentTarget","modalOverlay","display","opacity","open","setTimeout","customElements","define"],"version":3,"file":"index.6a84e6b0.js.map"}