{"mappings":"ACAA,CACE,MAAM,UAAuB,YAC3B,uBAAyB,2BAA4B,AACrD,CAAA,qBAAuB,mBAAoB,AAC3C,CAAA,qBAAuB,yBAA0B,AACjD,CAAA,uBAAyB,2BAA4B,AAErD,cAAc,CACZ,KAAK,GAEL,IAAI,CAAC,YAAY,CAAC,CAAE,KAAM,MAAO,EACnC,CAEA,gBAAiB,CACf,IAAM,EAAa,IAAI,CAAC,YAAY,CAAC,cAC/B,EACJ,IAAI,CAAC,YAAY,CAAC,uBAAyB,SACvC,EAAgB,IAAI,CAAC,YAAY,CAAC,kBAAoB,OACtD,EAAe,IAAI,CAAC,YAAY,CAAC,iBAAmB,UACpD,EAAiB,IAAI,CAAC,YAAY,CAAC,mBAAqB,UACxD,EAAa,IAAI,CAAC,YAAY,CAAC,eAAiB,QAChD,EAAc,IAAI,CAAC,YAAY,CAAC,gBAAkB,QAClD,EAAe,IAAI,CAAC,YAAY,CAAC,iBAAmB,WAE1D,CAAA,IAAI,CAAC,UAAU,CAAC,SAAS,CAAG,CAAC;;;;iBAIlB,EAAE,EAAe;;;;;;;;;;;;;;;;;;;;;;;iBAuBjB,EAAE,EAAW;kBACZ,EAAE,EAAY;;4BAEJ,EAAE,EAAa;iBAC1B,EAAE,EAAe;;mBAEf,EAAE,EAAa;;;;;;sBAMZ,EAAE,EAAmB;;;;;;;iBAO1B,EAAE,EAAe;;;;;;;qBAOb,EAAE,EAAc;;;;;;iBAMpB,EAAE,EAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cA+BpB,EACE,EACI,CAAC,iCAAiC,EAAE,EAAW,KAAK,CAAC,CACrD,GACL;;;;;MAKT,CAAC,AACH,CAEA,mBAAoB,CAClB,IAAI,CAAC,cAAc,GAEnB,IAAI,CAAC,UAAU,CACZ,aAAa,CAAC,IAAI,CAAC,oBAAoB,EACvC,gBAAgB,CAAC,QAAS,KACzB,IAAI,CAAC,KAAK,EACZ,GAEF,IAAI,CAAC,UAAU,CACZ,aAAa,CAAC,IAAI,CAAC,sBAAsB,EACzC,gBAAgB,CAAC,QAAS,AAAC,IACtB,EAAE,MAAM,GAAK,EAAE,aAAa,EAC9B,IAAI,CAAC,KAAK,EAEd,EACJ,CAEA,OAAQ,CACN,IAAM,EAAe,IAAI,CAAC,UAAU,CAAC,aAAa,CAChD,IAAI,CAAC,sBAAsB,EAEvB,EAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAoB,CACrE,CAAA,EAAa,KAAK,CAAC,OAAO,CAAG,OAC7B,EAAM,KAAK,CAAC,OAAO,CAAG,OACtB,EAAa,KAAK,CAAC,OAAO,CAAG,EAC7B,EAAM,KAAK,CAAC,OAAO,CAAG,CACxB,CAEA,MAAO,CACL,IAAM,EAAe,IAAI,CAAC,UAAU,CAAC,aAAa,CAChD,IAAI,CAAC,sBAAsB,EAEvB,EAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAoB,CACrE,CAAA,EAAa,KAAK,CAAC,OAAO,CAAG,OAC7B,EAAM,KAAK,CAAC,OAAO,CAAG,QAEjB,WAAW,KACd,EAAa,KAAK,CAAC,OAAO,CAAG,CAC/B,EAAG,KAEE,WAAW,KACd,EAAM,KAAK,CAAC,OAAO,CAAG,CACxB,EAAG,IACL,CACF,CAEA,eAAe,MAAM,CAAC,mBAAoB,EAE1C;;;;;;;;;;AAUF,EAEE;;;;;;;;;;;;;;;AAeF,EACA,C,0C","sources":["<anon>","src/modal/index.js"],"sourcesContent":["{\n    class SqsCustomModal extends HTMLElement {\n        OVERLAY_CLASS_SELECTOR = \".sqs-custom-modal-overlay\";\n        MODAL_CLASS_SELECTOR = \".sqs-custom-modal\";\n        CLOSE_CLASS_SELECTOR = \".sqs-custom-modal-close\";\n        CONTENT_CLASS_SELECTOR = \".sqs-custom-modal-content\";\n        constructor(){\n            super();\n            this.attachShadow({\n                mode: \"open\"\n            });\n        }\n        getPropsValues() {\n            const modalTitle = this.getAttribute(\"modalTitle\");\n            const modalTitlePosition = this.getAttribute(\"modalTitlePosition\") || \"center\";\n            const closeIconSize = this.getAttribute(\"closeIconSize\") || \"40px\";\n            const modalBgColor = this.getAttribute(\"modalBgColor\") || \"#ffffff\";\n            const modalTextColor = this.getAttribute(\"modalTextColor\") || \"#000000\";\n            const modalWidth = this.getAttribute(\"modalWidth\") || \"600px\";\n            const modalHeight = this.getAttribute(\"modalHeight\") || \"400px\";\n            const modalPadding = this.getAttribute(\"modalPadding\") || \"30px 40px\";\n            this.shadowRoot.innerHTML = `\n        <style>\n        * {\n          box-sizing: border-box;\n          color: ${modalTextColor};\n        }\n    \n        .sqs-custom-modal-overlay {\n          background-color: rgba(0, 0, 0, 0.5);\n          display: none;\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          z-index: 9999;\n          align-items: center;\n          justify-content: center;\n          transition: opacity 0.3s ease;\n          opacity: 0;\n        }\n    \n        .sqs-custom-modal {\n          border-radius: 25px;\n          z-index: 9999;\n          display: none;\n          z-index: 1;\n          width: ${modalWidth};\n          height: ${modalHeight};\n          overflow: auto;\n          background-color: ${modalBgColor};\n          color: ${modalTextColor};\n          position: relative;\n          padding: ${modalPadding};\n          opacity: 0;\n          transition: opacity 0.3s ease;\n        }\n\n        .sqs-custom-modal h3 {\n          text-align: ${modalTitlePosition};\n        }\n    \n        .sqs-custom-modal-content {\n          display: flex;\n          width: 100%;\n          height: 100%;\n          color: ${modalTextColor};\n          justify-content: stretch;\n          flex-direction: column;\n        }\n    \n        .sqs-custom-modal-close {\n          float: right;\n          font-size: ${closeIconSize};\n          line-height: 1em;\n          position: absolute;\n          top: -2px;\n          right: 14px;\n          transition: color 0.3s ease;\n          color: ${modalTextColor};\n        }\n    \n        .sqs-custom-modal-close:hover {\n          text-decoration: none;\n          cursor: pointer;\n        }\n    \n        .sqs-custom-modal-close:hover,\n        .sqs-custom-modal-close:focus {\n          text-decoration: none;\n          cursor: pointer;\n        }      \n    \n        @media screen and (max-width: 600px)) {\n          .sqs-custom-modal {\n            width: calc(100vw - 5%);\n            height: calc(100vh - 5%);\n          }\n    \n          .sqs-custom-modal-content {\n            display: flex;\n            flex-wrap: wrap !important;\n          }\n        }\n        </style>\n\n        <div class=\"sqs-custom-modal-overlay\">\n          <div class=\"sqs-custom-modal\">\n            <div class=\"sqs-custom-modal-content\">\n              <span class=\"sqs-custom-modal-close\">&times;</span>\n              ${modalTitle ? `<h3 style=\"align-items: center;\">${modalTitle}</h3>` : \"\"}\n              <slot></slot>\n            </div>\n          </div>\n        </div>\n      `;\n        }\n        connectedCallback() {\n            this.getPropsValues();\n            this.shadowRoot.querySelector(this.CLOSE_CLASS_SELECTOR).addEventListener(\"click\", ()=>{\n                this.close();\n            });\n            this.shadowRoot.querySelector(this.OVERLAY_CLASS_SELECTOR).addEventListener(\"click\", (e)=>{\n                if (e.target === e.currentTarget) this.close();\n            });\n        }\n        close() {\n            const modalOverlay = this.shadowRoot.querySelector(this.OVERLAY_CLASS_SELECTOR);\n            const modal = this.shadowRoot.querySelector(this.MODAL_CLASS_SELECTOR);\n            modalOverlay.style.display = \"none\";\n            modal.style.display = \"none\";\n            modalOverlay.style.opacity = 0;\n            modal.style.opacity = 0;\n        }\n        open() {\n            const modalOverlay = this.shadowRoot.querySelector(this.OVERLAY_CLASS_SELECTOR);\n            const modal = this.shadowRoot.querySelector(this.MODAL_CLASS_SELECTOR);\n            modalOverlay.style.display = \"flex\";\n            modal.style.display = \"block\";\n            setTimeout(()=>{\n                modalOverlay.style.opacity = 1;\n            }, 200);\n            setTimeout(()=>{\n                modal.style.opacity = 1;\n            }, 500);\n        }\n    }\n    customElements.define(\"sqs-custom-modal\", SqsCustomModal);\n/*\nHow to use it:\n\n<sqs-custom-modal id=\"modal1\">\n  <p>Some text in the Modal..</p>\n</sqs-custom-modal>\n\n<button onclick=\"document.getElementById('modal1').open()\">\n  Open Modal\n</button>\n*/ /*\nHow to use props:\n\n<sqs-custom-modal \n  id=\"modal1\" \n  justifyContent=\"center\" \n  alignItems=\"center\" \n  direction=\"column\"\n>\n  <p>Some text in the Modal..</p>\n</sqs-custom-modal>\n\n<button onclick=\"document.getElementById('modal1').open()\">\n  Open Modal\n</button>\n*/ }\n//# sourceMappingURL=index.6a84e6b0.js.map\n","{\n  class SqsCustomModal extends HTMLElement {\n    OVERLAY_CLASS_SELECTOR = \".sqs-custom-modal-overlay\";\n    MODAL_CLASS_SELECTOR = \".sqs-custom-modal\";\n    CLOSE_CLASS_SELECTOR = \".sqs-custom-modal-close\";\n    CONTENT_CLASS_SELECTOR = \".sqs-custom-modal-content\";\n\n    constructor() {\n      super();\n\n      this.attachShadow({ mode: \"open\" });\n    }\n\n    getPropsValues() {\n      const modalTitle = this.getAttribute(\"modalTitle\");\n      const modalTitlePosition =\n        this.getAttribute(\"modalTitlePosition\") || \"center\";\n      const closeIconSize = this.getAttribute(\"closeIconSize\") || \"40px\";\n      const modalBgColor = this.getAttribute(\"modalBgColor\") || \"#ffffff\";\n      const modalTextColor = this.getAttribute(\"modalTextColor\") || \"#000000\";\n      const modalWidth = this.getAttribute(\"modalWidth\") || \"600px\";\n      const modalHeight = this.getAttribute(\"modalHeight\") || \"400px\";\n      const modalPadding = this.getAttribute(\"modalPadding\") || \"30px 40px\";\n\n      this.shadowRoot.innerHTML = `\n        <style>\n        * {\n          box-sizing: border-box;\n          color: ${modalTextColor};\n        }\n    \n        .sqs-custom-modal-overlay {\n          background-color: rgba(0, 0, 0, 0.5);\n          display: none;\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          z-index: 9999;\n          align-items: center;\n          justify-content: center;\n          transition: opacity 0.3s ease;\n          opacity: 0;\n        }\n    \n        .sqs-custom-modal {\n          border-radius: 25px;\n          z-index: 9999;\n          display: none;\n          z-index: 1;\n          width: ${modalWidth};\n          height: ${modalHeight};\n          overflow: auto;\n          background-color: ${modalBgColor};\n          color: ${modalTextColor};\n          position: relative;\n          padding: ${modalPadding};\n          opacity: 0;\n          transition: opacity 0.3s ease;\n        }\n\n        .sqs-custom-modal h3 {\n          text-align: ${modalTitlePosition};\n        }\n    \n        .sqs-custom-modal-content {\n          display: flex;\n          width: 100%;\n          height: 100%;\n          color: ${modalTextColor};\n          justify-content: stretch;\n          flex-direction: column;\n        }\n    \n        .sqs-custom-modal-close {\n          float: right;\n          font-size: ${closeIconSize};\n          line-height: 1em;\n          position: absolute;\n          top: -2px;\n          right: 14px;\n          transition: color 0.3s ease;\n          color: ${modalTextColor};\n        }\n    \n        .sqs-custom-modal-close:hover {\n          text-decoration: none;\n          cursor: pointer;\n        }\n    \n        .sqs-custom-modal-close:hover,\n        .sqs-custom-modal-close:focus {\n          text-decoration: none;\n          cursor: pointer;\n        }      \n    \n        @media screen and (max-width: 600px)) {\n          .sqs-custom-modal {\n            width: calc(100vw - 5%);\n            height: calc(100vh - 5%);\n          }\n    \n          .sqs-custom-modal-content {\n            display: flex;\n            flex-wrap: wrap !important;\n          }\n        }\n        </style>\n\n        <div class=\"sqs-custom-modal-overlay\">\n          <div class=\"sqs-custom-modal\">\n            <div class=\"sqs-custom-modal-content\">\n              <span class=\"sqs-custom-modal-close\">&times;</span>\n              ${\n                modalTitle\n                  ? `<h3 style=\"align-items: center;\">${modalTitle}</h3>`\n                  : \"\"\n              }\n              <slot></slot>\n            </div>\n          </div>\n        </div>\n      `;\n    }\n\n    connectedCallback() {\n      this.getPropsValues();\n\n      this.shadowRoot\n        .querySelector(this.CLOSE_CLASS_SELECTOR)\n        .addEventListener(\"click\", () => {\n          this.close();\n        });\n\n      this.shadowRoot\n        .querySelector(this.OVERLAY_CLASS_SELECTOR)\n        .addEventListener(\"click\", (e) => {\n          if (e.target === e.currentTarget) {\n            this.close();\n          }\n        });\n    }\n\n    close() {\n      const modalOverlay = this.shadowRoot.querySelector(\n        this.OVERLAY_CLASS_SELECTOR\n      );\n      const modal = this.shadowRoot.querySelector(this.MODAL_CLASS_SELECTOR);\n      modalOverlay.style.display = \"none\";\n      modal.style.display = \"none\";\n      modalOverlay.style.opacity = 0;\n      modal.style.opacity = 0;\n    }\n\n    open() {\n      const modalOverlay = this.shadowRoot.querySelector(\n        this.OVERLAY_CLASS_SELECTOR\n      );\n      const modal = this.shadowRoot.querySelector(this.MODAL_CLASS_SELECTOR);\n      modalOverlay.style.display = \"flex\";\n      modal.style.display = \"block\";\n\n      void setTimeout(() => {\n        modalOverlay.style.opacity = 1;\n      }, 200);\n\n      void setTimeout(() => {\n        modal.style.opacity = 1;\n      }, 500);\n    }\n  }\n\n  customElements.define(\"sqs-custom-modal\", SqsCustomModal);\n\n  /*\nHow to use it:\n\n<sqs-custom-modal id=\"modal1\">\n  <p>Some text in the Modal..</p>\n</sqs-custom-modal>\n\n<button onclick=\"document.getElementById('modal1').open()\">\n  Open Modal\n</button>\n*/\n\n  /*\nHow to use props:\n\n<sqs-custom-modal \n  id=\"modal1\" \n  justifyContent=\"center\" \n  alignItems=\"center\" \n  direction=\"column\"\n>\n  <p>Some text in the Modal..</p>\n</sqs-custom-modal>\n\n<button onclick=\"document.getElementById('modal1').open()\">\n  Open Modal\n</button>\n*/\n}\n"],"names":["SqsCustomModal","HTMLElement","OVERLAY_CLASS_SELECTOR","MODAL_CLASS_SELECTOR","CLOSE_CLASS_SELECTOR","CONTENT_CLASS_SELECTOR","constructor","attachShadow","mode","getPropsValues","modalTitle","getAttribute","modalTitlePosition","closeIconSize","modalBgColor","modalTextColor","modalWidth","modalHeight","modalPadding","shadowRoot","innerHTML","connectedCallback","querySelector","addEventListener","close","e","target","currentTarget","modalOverlay","modal","style","display","opacity","open","setTimeout","customElements","define"],"version":3,"file":"index.6a84e6b0.js.map"}