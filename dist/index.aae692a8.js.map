{"mappings":"AAAA;IACE,MAAM,uBAAuB;QAC3B,yBAAyB,4BAA4B;QACrD,uBAAuB,oBAAoB;QAC3C,uBAAuB,0BAA0B;QACjD,yBAAyB,4BAA4B;QAErD,aAAc;YACZ,KAAK;YAEL,IAAI,CAAC,YAAY,CAAC;gBAAE,MAAM;YAAO;QACnC;QAEA,iBAAiB;YACf,MAAM,aAAa,IAAI,CAAC,YAAY,CAAC;YACrC,MAAM,qBACJ,IAAI,CAAC,YAAY,CAAC,yBAAyB;YAC7C,MAAM,gBAAgB,IAAI,CAAC,YAAY,CAAC,oBAAoB;YAC5D,MAAM,eAAe,IAAI,CAAC,YAAY,CAAC,mBAAmB;YAC1D,MAAM,iBAAiB,IAAI,CAAC,YAAY,CAAC,qBAAqB;YAC9D,MAAM,aAAa,IAAI,CAAC,YAAY,CAAC,iBAAiB;YACtD,MAAM,cAAc,IAAI,CAAC,YAAY,CAAC,kBAAkB;YACxD,MAAM,eAAe,IAAI,CAAC,YAAY,CAAC,mBAAmB;YAE1D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC;;;;iBAIlB,EAAE,eAAe;;;;;;;;;;;;;;;;;;;;;;;iBAuBjB,EAAE,WAAW;kBACZ,EAAE,YAAY;;4BAEJ,EAAE,aAAa;iBAC1B,EAAE,eAAe;;mBAEf,EAAE,aAAa;;;;;;sBAMZ,EAAE,mBAAmB;;;;;;;iBAO1B,EAAE,eAAe;;;;;;;;qBAQb,EAAE,cAAc;;;;;;iBAMpB,EAAE,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cA+BpB,EACE,aACI,CAAC,iCAAiC,EAAE,WAAW,KAAK,CAAC,GACrD,GACL;;;;;MAKT,CAAC;QACH;QAEA,oBAAoB;YAClB,IAAI,CAAC,cAAc;YAEnB,IAAI,CAAC,UAAU,CACZ,aAAa,CAAC,IAAI,CAAC,oBAAoB,EACvC,gBAAgB,CAAC,SAAS;gBACzB,IAAI,CAAC,KAAK;YACZ;YAEF,IAAI,CAAC,UAAU,CACZ,aAAa,CAAC,IAAI,CAAC,sBAAsB,EACzC,gBAAgB,CAAC,SAAS,CAAC;gBAC1B,IAAI,EAAE,MAAM,KAAK,EAAE,aAAa,EAC9B,IAAI,CAAC,KAAK;YAEd;QACJ;QAEA,QAAQ;YACN,MAAM,eAAe,IAAI,CAAC,UAAU,CAAC,aAAa,CAChD,IAAI,CAAC,sBAAsB;YAE7B,MAAM,QAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAoB;YACrE,aAAa,KAAK,CAAC,OAAO,GAAG;YAC7B,MAAM,KAAK,CAAC,OAAO,GAAG;YACtB,aAAa,KAAK,CAAC,OAAO,GAAG;YAC7B,MAAM,KAAK,CAAC,OAAO,GAAG;QACxB;QAEA,OAAO;YACL,MAAM,eAAe,IAAI,CAAC,UAAU,CAAC,aAAa,CAChD,IAAI,CAAC,sBAAsB;YAE7B,MAAM,QAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAoB;YACrE,aAAa,KAAK,CAAC,OAAO,GAAG;YAC7B,MAAM,KAAK,CAAC,OAAO,GAAG;YAEjB,WAAW;gBACd,aAAa,KAAK,CAAC,OAAO,GAAG;YAC/B,GAAG;YAEE,WAAW;gBACd,MAAM,KAAK,CAAC,OAAO,GAAG;YACxB,GAAG;QACL;IACF;IAEA,eAAe,MAAM,CAAC,oBAAoB;AAE1C;;;;;;;;;;AAUF,GAEE;;;;;;;;;;;;;;;AAeF,GACA","sources":["src/modal/index.js"],"sourcesContent":["{\n  class SqsCustomModal extends HTMLElement {\n    OVERLAY_CLASS_SELECTOR = \".sqs-custom-modal-overlay\";\n    MODAL_CLASS_SELECTOR = \".sqs-custom-modal\";\n    CLOSE_CLASS_SELECTOR = \".sqs-custom-modal-close\";\n    CONTENT_CLASS_SELECTOR = \".sqs-custom-modal-content\";\n\n    constructor() {\n      super();\n\n      this.attachShadow({ mode: \"open\" });\n    }\n\n    getPropsValues() {\n      const modalTitle = this.getAttribute(\"modalTitle\");\n      const modalTitlePosition =\n        this.getAttribute(\"modalTitlePosition\") || \"center\";\n      const closeIconSize = this.getAttribute(\"closeIconSize\") || \"40px\";\n      const modalBgColor = this.getAttribute(\"modalBgColor\") || \"#ffffff\";\n      const modalTextColor = this.getAttribute(\"modalTextColor\") || \"#000000\";\n      const modalWidth = this.getAttribute(\"modalWidth\") || \"600px\";\n      const modalHeight = this.getAttribute(\"modalHeight\") || \"400px\";\n      const modalPadding = this.getAttribute(\"modalPadding\") || \"30px 40px\";\n\n      this.shadowRoot.innerHTML = `\n        <style>\n        * {\n          box-sizing: border-box;\n          color: ${modalTextColor};\n        }\n    \n        .sqs-custom-modal-overlay {\n          background-color: rgba(0, 0, 0, 0.5);\n          display: none;\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          z-index: 9999;\n          align-items: center;\n          justify-content: center;\n          transition: opacity 0.3s ease;\n          opacity: 0;\n        }\n    \n        .sqs-custom-modal {\n          border-radius: 25px;\n          z-index: 9999;\n          display: none;\n          z-index: 1;\n          width: ${modalWidth};\n          height: ${modalHeight};\n          overflow: auto;\n          background-color: ${modalBgColor};\n          color: ${modalTextColor};\n          position: relative;\n          padding: ${modalPadding};\n          opacity: 0;\n          transition: opacity 0.3s ease;\n        }\n\n        .sqs-custom-modal h3 {\n          text-align: ${modalTitlePosition};\n        }\n    \n        .sqs-custom-modal-content {\n          display: flex;\n          width: 100%;\n          height: 100%;\n          color: ${modalTextColor};\n          justify-content: stretch;\n          flex-direction: column;\n          flex: 1;\n        }\n    \n        .sqs-custom-modal-close {\n          float: right;\n          font-size: ${closeIconSize};\n          line-height: 1em;\n          position: absolute;\n          top: 4px;\n          right: 14px;\n          transition: color 0.3s ease;\n          color: ${modalTextColor};\n        }\n    \n        .sqs-custom-modal-close:hover {\n          text-decoration: none;\n          cursor: pointer;\n        }\n    \n        .sqs-custom-modal-close:hover,\n        .sqs-custom-modal-close:focus {\n          text-decoration: none;\n          cursor: pointer;\n        }      \n    \n        @media screen and max-width(600px) {\n          .sqs-custom-modal {\n            width: 80vw;\n            height: auto;\n          }\n    \n          .sqs-custom-modal-content {\n            display: flex;\n            flex-wrap: wrap !important;\n          }\n        }\n        </style>\n\n        <div class=\"sqs-custom-modal-overlay\">\n          <div class=\"sqs-custom-modal\">\n            <div class=\"sqs-custom-modal-content\">\n              <span class=\"sqs-custom-modal-close\">&times;</span>\n              ${\n                modalTitle\n                  ? `<h3 style=\"align-items: center;\">${modalTitle}</h3>`\n                  : \"\"\n              }\n              <slot></slot>\n            </div>\n          </div>\n        </div>\n      `;\n    }\n\n    connectedCallback() {\n      this.getPropsValues();\n\n      this.shadowRoot\n        .querySelector(this.CLOSE_CLASS_SELECTOR)\n        .addEventListener(\"click\", () => {\n          this.close();\n        });\n\n      this.shadowRoot\n        .querySelector(this.OVERLAY_CLASS_SELECTOR)\n        .addEventListener(\"click\", (e) => {\n          if (e.target === e.currentTarget) {\n            this.close();\n          }\n        });\n    }\n\n    close() {\n      const modalOverlay = this.shadowRoot.querySelector(\n        this.OVERLAY_CLASS_SELECTOR\n      );\n      const modal = this.shadowRoot.querySelector(this.MODAL_CLASS_SELECTOR);\n      modalOverlay.style.display = \"none\";\n      modal.style.display = \"none\";\n      modalOverlay.style.opacity = 0;\n      modal.style.opacity = 0;\n    }\n\n    open() {\n      const modalOverlay = this.shadowRoot.querySelector(\n        this.OVERLAY_CLASS_SELECTOR\n      );\n      const modal = this.shadowRoot.querySelector(this.MODAL_CLASS_SELECTOR);\n      modalOverlay.style.display = \"flex\";\n      modal.style.display = \"block\";\n\n      void setTimeout(() => {\n        modalOverlay.style.opacity = 1;\n      }, 200);\n\n      void setTimeout(() => {\n        modal.style.opacity = 1;\n      }, 500);\n    }\n  }\n\n  customElements.define(\"sqs-custom-modal\", SqsCustomModal);\n\n  /*\nHow to use it:\n\n<sqs-custom-modal id=\"modal1\">\n  <p>Some text in the Modal..</p>\n</sqs-custom-modal>\n\n<button onclick=\"document.getElementById('modal1').open()\">\n  Open Modal\n</button>\n*/\n\n  /*\nHow to use props:\n\n<sqs-custom-modal \n  id=\"modal1\" \n  justifyContent=\"center\" \n  alignItems=\"center\" \n  direction=\"column\"\n>\n  <p>Some text in the Modal..</p>\n</sqs-custom-modal>\n\n<button onclick=\"document.getElementById('modal1').open()\">\n  Open Modal\n</button>\n*/\n}\n"],"names":[],"version":3,"file":"index.aae692a8.js.map","sourceRoot":"/__parcel_source_root/"}